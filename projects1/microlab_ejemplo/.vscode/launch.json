{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Debug (stm32f446re)", // PORTABILITY: change this to your platform
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "openocd",
      "device": "STM32F446RE", // PORTABILITY: change this to your platform
      "configFiles": [
        "${workspaceFolder}/../../openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Build (stm32f446re)", // PORTABILITY: change this to your platform
      "postLaunchCommands": [
        "monitor arm semihosting enable",
      ],
      "svdFile": "${workspaceFolder}/../../svd/STM32F446.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Clean and Debug (stm32f446re)", // PORTABILITY: PORTABILITY: change this to your platform
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "openocd",
      "device": "STM32F446RE", // PORTABILITY: change this to your platform
      "configFiles": [
        "${workspaceFolder}/../../openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f446re)",  // PORTABILITY: change this to your platform
      "postLaunchCommands": [
        "monitor arm semihosting enable",
      ],
      "svdFile": "${workspaceFolder}/../../svd/STM32F446.svd", // PORTABILITY: change this to your platform
    },
    {

                      "name": "Clean and Debug (stm32f446re) (External OpenOCD) (Windows)",
                      "type": "cortex-debug",
                      "request": "launch",
                      "cwd": "${workspaceRoot}",
                      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf",
                      "runToEntryPoint": "main",
                
                      // 1) Indicamos que el servidor de OpenOCD corre FUERA del contenedor:
                      "servertype": "external",
                
                      // 2) Apuntamos al host donde está escuchando OpenOCD:
                      //    - Linux con --network=host: "localhost:3333"
                      //    - macOS/Windows (Docker Desktop): "host.docker.internal:3333"
                      "gdbTarget": "host.docker.internal:3333",
                
                      "device": "STM32F446RE",
                
                      // 3) ¡Ojo! Aquí NO ponemos preLaunchTask porque
                      //    la task "Run OpenOCD" se ejecuta en el host, no dentro del contenedor.
                      //    Debes arrancar esa task manualmente (o desde tu host) antes de depurar.
                      "preLaunchTask": "cortex-debug: Clean and Build (stm32f446re)",  // PORTABILITY: change this to your platform
                      "postLaunchCommands": [
                        "monitor arm semihosting enable"
                      ],
                      "svdFile": "${workspaceFolder}/../../svd/STM32F446.svd"
                    
                  
    },

    {
      "name": "Debug (QEMU)",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f405rg/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "${workspaceFolder}/../../../qemu_new/build/qemu-system-arm", // PORTABILITY: change this to your QEMU path
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG", // PORTABILITY: change this to your platform
      "configFiles": [
        "${workspaceFolder}/../../openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Build (stm32f405rg)", // PORTABILITY: change this to your platform
      "svdFile": "${workspaceFolder}/../../svd/stm32f405.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Clean and Debug (QEMU)",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f405rg/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "${workspaceFolder}/../../../qemu_new/build/qemu-system-arm", // PORTABILITY: change this to your QEMU path
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG", // PORTABILITY: change this to your platform
      "configFiles": [
        "${workspaceFolder}/../../openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f405rg)",  // PORTABILITY: change this to your platform
      "svdFile": "${workspaceFolder}/../../svd/STM32F405RG.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Debug MICROLAB (QTest)",
      "cwd": "${env:MATRIXMCU}/projects/microlab_ejemplo",
      "executable": "${env:MATRIXMCU}/projects/microlab_ejemplo/bin/stm32f405rg/Debug/${input:launchTargetID}.elf",
      "request": "launch",
      //"runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "${env:MATRIXMCU}/../qemu_new/build/qemu-system-arm",
      "serverArgs": [
        "-qtest",
        "tcp:rust-server:3000"
      ],
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG",
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Build (stm32f405rg)",
      "svdFile": "${env:MATRIXMCU}/svd/STM32F405RG.svd"
    },
    {
      "name": "Clean and Debug MICROLAB (QTest)",
      "cwd": "${env:MATRIXMCU}/projects/microlab_ejemplo",
      "executable": "${env:MATRIXMCU}/projects/microlab_ejemplo/bin/stm32f405rg/Debug/${input:launchTargetID}.elf",
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "${env:MATRIXMCU}/../qemu_new/build/qemu-system-arm",
      "serverArgs": [
        "-qtest",
        "tcp:rust-server:3000"
      ],
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG",
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f405rg)",
      "svdFile": "${env:MATRIXMCU}/svd/STM32F405RG.svd"
    }
  ],
  "inputs": [
    {
      "id": "launchTargetID",
      "type": "command",
      "command": "extension.commandvariable.pickStringRemember",
      "args": {
        "key": "lasttarget",
        "description": "Enter the target:",
        "default": "main",
        "options": [
          "main",
          "example_blink",
          "example_button",
          "example_pwm",
          "example_inputCapture",
          "example_test_signal"
        ]
      }
		}
	]
}
