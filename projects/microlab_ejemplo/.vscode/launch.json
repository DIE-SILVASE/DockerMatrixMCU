{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Debug (stm32f446re)", // PORTABILITY: change this to your platform
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "openocd",
      "device": "STM32F446RE", // PORTABILITY: change this to your platform
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Build (stm32f446re)", // PORTABILITY: change this to your platform
      "postLaunchCommands": [
        "monitor arm semihosting enable",
      ],
      "svdFile": "${env:MATRIXMCU}/svd/STM32F446.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Clean and Debug (stm32f446re)", // PORTABILITY: PORTABILITY: change this to your platform
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "openocd",
      "device": "STM32F446RE", // PORTABILITY: change this to your platform
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f446re)",  // PORTABILITY: change this to your platform
      "postLaunchCommands": [
        "monitor arm semihosting enable",
      ],
      "svdFile": "${env:MATRIXMCU}/svd/STM32F446.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Debug (stm32f446re) (Docker)",
      "type": "cortex-debug",
      "request": "launch",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf",
      "runToEntryPoint": "main",
      // 1) Indicamos que el servidor de OpenOCD corre FUERA del contenedor:
      "servertype": "external",
      // 2) Apuntamos al host donde está escuchando OpenOCD:
      //    - Linux con --network=host: "localhost:3333"
      //    - macOS/Windows (Docker Desktop): "host.docker.internal:3333"
      "gdbTarget":  "${env:HOST_SERVER}:3000",
      "device": "STM32F446RE",
      "preLaunchTask": "cortex-debug: Build (stm32f446re)",  // PORTABILITY: change this to your platform
      "postLaunchCommands": [
        "monitor arm semihosting enable"
      ],
      "svdFile": "${env:MATRIXMCU}/svd/STM32F446.svd",                
    },
    {
      "name": "Clean and Debug (stm32f446re) (Docker)",
      "type": "cortex-debug",
      "request": "launch",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f446re/Debug/${input:launchTargetID}.elf",
      "runToEntryPoint": "main",
      // 1) Indicamos que el servidor de OpenOCD corre FUERA del contenedor:
      "servertype": "external",
      // 2) Apuntamos al host donde está escuchando OpenOCD:
      //    - Linux con --network=host: "localhost:3333"
      //    - macOS/Windows (Docker Desktop): "host.docker.internal:3333"
      "gdbTarget": "${env:HOST_SERVER}:3000",
      "device": "STM32F446RE",
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f446re)",  // PORTABILITY: change this to your platform
      "postLaunchCommands": [
        "monitor arm semihosting enable"
      ],
      "svdFile": "${env:MATRIXMCU}/svd/STM32F446.svd",                
    },
    {
      "name": "Debug (QEMU)",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f405rg/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "qemu-system-arm",
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG", // PORTABILITY: change this to your platform
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Build (stm32f405rg)", // PORTABILITY: change this to your platform
      "svdFile": "${env:MATRIXMCU}/svd/STM32F405.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Clean and Debug (QEMU)",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f405rg/Debug/${input:launchTargetID}.elf", // PORTABILITY: change this to your platform
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "qemu-system-arm",
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG", // PORTABILITY: change this to your platform
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f405rg)",  // PORTABILITY: change this to your platform
      "svdFile": "${env:MATRIXMCU}/svd/STM32F405.svd", // PORTABILITY: change this to your platform
    },
    {
      "name": "Debug MICROLAB (QTest)",
      "cwd": "${workspaceRoot}",
      "executable": "${workspaceFolder}/bin/stm32f405rg/Debug/${input:launchTargetID}.elf",
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "qemu-system-arm",
      "serverArgs": [
        "-qtest",
        //"tcp:rust-server:3000"
        //"host.docker.internal:3000",
         "tcp:${env:HOST_SERVER}:3000"
      ],
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG",
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Build (stm32f405rg)",
      "svdFile": "${env:MATRIXMCU}/svd/STM32F405.svd"
    },
    {
      "name": "Clean and Debug MICROLAB (QTest)",
      "cwd": "${workspaceFolder}",
      "executable": "${workspaceFolder}/bin/stm32f405rg/Debug/${input:launchTargetID}.elf",
      "request": "launch",
      "runToEntryPoint": "main",
      "type": "cortex-debug",
      "servertype": "qemu",
      "serverpath": "qemu-system-arm",
      "serverArgs": [
        "-qtest",
        //"tcp:rust-server:3000",  //solo valido en Linux si estamos conectados a lab_virtual_net
        //"host.docker.internal:3000",
        "tcp:${env:HOST_SERVER}:3000"
      ],
      "cpu": "cortex-m4",
      "machine": "netduinoplus2",
      "device": "STM32F405RG",
      "configFiles": [
        "${env:MATRIXMCU}/openocd/stm32f4x.cfg"
      ],
      "preLaunchTask": "cortex-debug: Clean and Build (stm32f405rg)",
      "svdFile": "${env:MATRIXMCU}/svd/STM32F405.svd"
    }
  ],
  "inputs": [
    {
      "id": "launchTargetID",
      "type": "command",
      "command": "extension.commandvariable.pickStringRemember",
      "args": {
        "key": "lasttarget",
        "description": "Enter the target:",
        "default": "main",
        "options": [
          "main",
          "example_blink",
          "example_button",
          "example_pwm",
          "example_inputCapture",
          "example_test_signal"
        ]
      }
		}
	]
}
